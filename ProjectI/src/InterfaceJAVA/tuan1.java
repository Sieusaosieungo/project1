/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceJAVA;

import java.awt.event.ItemEvent;
import java.util.Scanner;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Manh VU
 */
public class tuan1 extends javax.swing.JFrame {

    /**
     * Creates new form tuan1
     */
    public tuan1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exCb = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        tf = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        chithi = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vũ Duy Mạnh - 20162679");

        exCb.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        exCb.setForeground(new java.awt.Color(0, 51, 255));
        exCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bai 1", "Bai 2", "Bai 3", "Bai 4", "Bai 5", "Bai 6", "Bai 7", "Bai 8", "Bai 9", "Bai 10", "Bai 11", "Bai 12", "Bai 13", "Bai 14", " ", " " }));
        exCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exCbActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Chọn bài tập: ");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("BÀI TẬP JAVA TUẦN 1");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Bạn đã chọn: ");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 0, 255));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Kết quả :");

        result.setColumns(20);
        result.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        result.setForeground(new java.awt.Color(0, 0, 255));
        result.setLineWrap(true);
        result.setRows(5);
        result.setToolTipText("");
        result.setWrapStyleWord(true);
        jScrollPane2.setViewportView(result);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tf.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 255));
        jButton2.setText("Hiển thị đề bài");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        input.setColumns(20);
        input.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        input.setForeground(new java.awt.Color(0, 0, 255));
        input.setLineWrap(true);
        input.setRows(5);
        input.setWrapStyleWord(true);
        jScrollPane3.setViewportView(input);

        jButton3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 255));
        jButton3.setText("ENTER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Mô tả đầu vào");

        chithi.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        chithi.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chithi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(exCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(51, 51, 51))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tf, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(jButton2)
                        .addGap(152, 152, 152))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tf, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addGap(10, 10, 10)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(exCb)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(chithi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exCbActionPerformed

    }//GEN-LAST:event_exCbActionPerformed
    public void hoTen(){
        result.append("\n-------------------------------------------------------");
	result.append("\n20162679 - Vu Duy Manh - 676424");
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tf.setText(exCb.getSelectedItem().toString());
        chithi.setText("");
        result.setText("");
        input.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed
    private int index;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jButton2 == (JButton) evt.getSource()) {
            String txt = (String) tf.getText();
            if (txt.equals("Bai 1")) {
                index = 1;
                chithi.setText("Nhập n vào ô bên dưới ");
                jTextArea1.setText("Bài 01: In ra màn hình tất cả các hợp số <100");
            } else if (txt.equals("Bai 2")) {
                index = 2;
                chithi.setText("Nhập n vào ô bên dưới ");
                jTextArea1.setText("Bài 02: In ra màn hình n số nguyên tố đầu tiên");
            } else if (txt.equals("Bai 3")) {
                index = 3;
                chithi.setText("ấn ENTER để lấy kết quả");
                jTextArea1.setText("Bài 03: In ra màn hình tất cả các số nguyên tố từ 1000 đến 2000");
            } else if (txt.equals("Bai 4")) {
                index = 4;
                chithi.setText("Nhập n vào ô bên dưới");

                jTextArea1.setText("Bài 04: In ra màn hình các số <100 và chia hết cho 3,7");
            } else if (txt.equals("Bai 5")) {
                index = 5;
                chithi.setText("ấn ENTER để lấy kết quả");
                jTextArea1.setText("Bài 05: In ra màn hình các số nằm giữa 1000 và 2000 đồng thời chia hết cho 3,5,7");
            } else if (txt.equals("Bai 6")) {
                index = 6;
                chithi.setText("ấn ENTER để lấy kết quả");
                jTextArea1.setText("Bài 06: In ra màn hình 5 số hoàn hảo đầu tiên (Số hoàn hảo là số có tổng bằng các ước số của mình kể cả 1");
            } else if (txt.equals("Bai 7")) {
                index = 7;
                chithi.setText("Nhập n vào ô bên dưới");
                jTextArea1.setText("Bài 07: Trong các số tự nhiên <=n hãy đếm xem có bao nhiêu số\na)Chia hết cho 5\nb)Chia 5 dư 1\nc)Chia 5 dư 2\nd)Chia 5 dư 3\n");
            } else if (txt.equals("Bai 8")) {
                index = 8;
                chithi.setText("Nhập N vào ô bên dưới");
                jTextArea1.setText("Bài 08: Cho số tự nhiên N bất kỳ (đã gán trước đó), tìm và in ra ước số nguyên tố nhỏ nhất của N");
            } else if (txt.equals("Bai 9")) {
                index = 9;
                chithi.setText("Nhập N vào ô bên dưới");
                jTextArea1.setText("Bài 09: Cho số tự nhiên N>1 bất kỳ (đã gán trước đó). In ra khai triển thành tích các số nguyên tố tính từ nhỏ đến lớn VD: 93.3; 122.2.3");
            } else if (txt.equals("Bai 10")) {
                index = 10;
                chithi.setText("Nhập N vào ô bên dưới");
                jTextArea1.setText("Bài 10: Cho trước số tự nhiên N bất kỳ (đã gán trước đó). In ra màn hình tất cả các ước số nguyên tố khác nhau của N ");
            } else if (txt.equals("Bai 11")) {
                index = 11;
                chithi.setText("Nhập N vào ô bên dưới");
                jTextArea1.setText("Bài 11: Cho số tự nhiên N bất kỳ\nTính tổng S=1+1/(1+2) + 1/(1+2+3) +…+ 1/(1+2+3+..+N)");
            } else if (txt.equals("Bai 12")) {
                index = 12;
                chithi.setText("Nhập N vào ô bên dưới");
                jTextArea1.setText("Bài 12: Cho số tự nhiên N bất kỳ, tính tổng\nS= 1+ 1/2! + 1/3! + … + 1/N!");
            } else if (txt.equals("Bai 13")) {
                index = 13;
                chithi.setText("Nhập N vào ô bên dưới");
                jTextArea1.setText("Bài 13: Cho số tự nhiên N bất kỳ,\nTính tổng S=1+1/(1+2!) + 1/(1+2!+3!)+ ..+ 1/(1+2!+3!+..+N!)");
            } else if (txt.equals("Bai 14")) {
                index = 14;
                chithi.setText("Nhập N vào ô bên dưới");
                jTextArea1.setText("Bài 14: Dãy Fibonaxi 1, 2, 3, … F(k) = F(k-1) + F(k-2). Tính số Fibonaxi thứ N.");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        if (index == 1) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            int count = 0;
            for (int i = 2; i < n; i++) {
                for (int j = 2; j <= Math.sqrt(i); j++) {
                    if (i % j == 0) {
                        result.append(i + "      ");
                        count++;
                        if (count == 15) {
                            result.append("\n");
                            count = 0;
                        }
                        break;
                    }
                    continue;
                }
            }
            hoTen();
        } else if (index == 2) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            int firstNum = 2;
            int count = 0;
            int count_line = 0;

            while (count < n) {
                int flag = 1;
                for (int i = 2; i < firstNum; i++) {
                    if (firstNum % i == 0) {
                        flag = 0;
                        break;
                    }
                }
                if (flag == 1) {
                    count++;
                    count_line++;
                    if (count_line == 15) {
                        count_line = 0;
                        result.append("\n");
                    }
                    result.append(firstNum + "   ");
                }
                firstNum++;
            }
            hoTen();
        } else if (index == 3) {
            result.setText("");
            int firstNum = 1000;
            int count = 0;
            while (firstNum < 2000) {
                int flag = 1;
                for (int i = 2; i < firstNum; i++) {
                    if (firstNum % i == 0) {
                        flag = 0;
                        break;
                    }
                }
                if (flag == 1) {
                    count++;
                    result.append(firstNum + "      ");
                    if (count == 15) {
                        result.append("\n");
                        count = 0;
                    }
                }
                firstNum++;
            }
            hoTen();
        } else if (index == 4) {
            result.setText("");
            int count_line = 0;
            int n = Integer.parseInt(input.getText());
            for (int i = 0; i < n; i++) {
                if (i % 21 == 0) {
                    count_line++;
                    if (count_line == 15) {
                        count_line = 0;
                        result.append("\n");
                    }
                    result.append(i + "       ");
                }
            }
            hoTen();
        } else if (index == 5) {
            result.setText("");
            int num = 1000;
            while (num < 2000) {
                if (num % 105 == 0) {
                    result.append(num + "     ");
                }
                num++;
            }
            hoTen();
        } else if (index == 6) {
            result.setText("");
            int count = 0;
            int num = 1;
            result.append("1" + "     ");
            while (count < 4) {
                int totalDivisor = 0;
                for (int i = 1; i <= num / 2; i++) {
                    if (num % i == 0) {
                        totalDivisor += i;
                    }
                }
                if (totalDivisor == num) {
                    count++;
                    result.append(num + "     ");
                }
                num++;
            }
            hoTen();
        } else if (index == 7) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            int count1 = 0, count2 = 0, count3 = 0, count4 = 0;
            for (int i = 0; i <= n; i++) {
                if (i % 5 == 0) {
                    count1++;
                } else if (i % 5 == 1) {
                    count2++;
                } else if (i % 5 == 2) {
                    count3++;
                } else if (i % 5 == 3) {
                    count4++;
                } else {
                    continue;
                }
            }
            result.append("Có: \n" + count1 + " số chia hết cho 5\n" + count2 + " số chia 5 dư 1\n" + count3 + " số chia 5 dư 2\n" + count4 + " số chia 5 dư 3");
            hoTen();
        } else if (index == 8) {
            result.setText("");
            int N = Integer.parseInt(input.getText());
            int k;
            for (k = 2; k <= N; k++) {
                int dem = 0;
                for (int x = 2; x <= k; x++) {
                    if (k % x == 0) {
                        dem++;
                    }
                }
                if ((N % k == 0) && (dem == 1)) {

                    result.append("Ước số nguyên tố nhỏ nhất là: " + k);
                    break;
                }
            }
            hoTen();
        } else if (index == 9) {
            result.setText("");
            int N = Integer.parseInt(input.getText());
            int k;
            for (k = 2; k <= N; k++) {
                if (N % k == 0) {
                    result.append(k + ".");
                    N = N / k;
                    k--;
                }
            }
            hoTen();
        } else if (index == 10) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            result.append("Các ước nguyên tố của " + n + " là: \n");
            for (int i = 2; i <= n / 2; i++) {
                if (n % i == 0 && isPrime(i)) {
                    result.append(i + "        ");
                }
            }
            hoTen();
        } else if (index == 11) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            result.append("Với n= " + n + "\nS = ");
            result.append(total(n) + "");
            hoTen();
        } else if (index == 12) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            result.append("Với N = " + n + "\nS = " + sum(n));
            hoTen();
        } else if (index == 13) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            result.append("Với n=" + n + "\nS = " + sum1(n));
            hoTen();
        } else if (index == 14) {
            result.setText("");
            int n = Integer.parseInt(input.getText());
            result.append("Với N=" + n + "\nSố hạng thứ "+n+" của dãy FIBONACCY (1,2,3,5,8...) là: ");
            result.append(fibonacy(n)+"");
            hoTen();
        }

    }//GEN-LAST:event_jButton3ActionPerformed
    static int fibonacy(int n) {
        if (n == 1) {
            return 1;
        } else if (n == 2) {
            return 2;
        } else {
            return fibonacy(n - 1) + fibonacy(n - 2);
        }
    }

    static int sumGiaiThua(int n) {
        if (n == 1) {
            return 1;
        } else {
            return sumGiaiThua(n - 1) + giaiThua(n);
        }
    }

    static double sum1(int n) {
        if (n == 1) {
            return 1;
        } else {
            return sum1(n - 1) + (double) 1 / sumGiaiThua(n);
        }
    }

    static double total(int n) {
        if (n == 1) {
            return 1;
        } else {
            return total(n - 1) + (double) 2 / (n * (n + 1));
        }
    }

    static int giaiThua(int n) {
        if (n == 1 || n == 0) {
            return 1;
        } else {
            return giaiThua(n - 1) * n;
        }
    }

    static double sum(int n) {
        if (n == 1) {
            return 1;
        } else {
            return sum(n - 1) + (double) 1 / giaiThua(n);
        }
    }

    static boolean isPrime(int n) {
        int flag = 1;
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                flag = 0;
                break;
            }
        }
        if (flag == 0) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tuan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tuan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tuan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tuan1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                tuan1 t1=new tuan1();
                t1.setVisible(true);
                t1.setTitle("Vũ Duy Mạnh - 20162679");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chithi;
    private javax.swing.JComboBox<String> exCb;
    private javax.swing.JTextArea input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextArea result;
    private javax.swing.JTextField tf;
    // End of variables declaration//GEN-END:variables
}
