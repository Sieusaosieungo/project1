/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceJAVA;

import InterfaceJAVA.tuan2;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Manh VU
 */
public class tuan3 extends javax.swing.JFrame {

    /**
     * Creates new form tuan3
     */
    public tuan3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cb3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        debai3 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        result3 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        chithi3 = new javax.swing.JTextArea();
        input3 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("BÀI TẬP JAVA TUẦN 3");

        jLabel1.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Chọn bài tập: ");

        cb3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        cb3.setForeground(new java.awt.Color(0, 51, 255));
        cb3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bai 1", "Bai 2", "Bai 3", "Bai 4", "Bai 5", "Bai 6", "Bai 7", "Bai 8", "Bai 9", "Bai 10", "Bai 11", "Bai 12", "Bai 13", "Bai 14", "Bai 15", "Bai 16" }));
        cb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Đề bài :");

        debai3.setColumns(20);
        debai3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        debai3.setForeground(new java.awt.Color(0, 0, 255));
        debai3.setLineWrap(true);
        debai3.setRows(5);
        debai3.setWrapStyleWord(true);
        jScrollPane1.setViewportView(debai3);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Kết quả :");

        result3.setColumns(20);
        result3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        result3.setForeground(new java.awt.Color(0, 0, 255));
        result3.setLineWrap(true);
        result3.setRows(5);
        result3.setWrapStyleWord(true);
        jScrollPane2.setViewportView(result3);

        chithi3.setBackground(new java.awt.Color(255, 255, 255));
        chithi3.setColumns(20);
        chithi3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        chithi3.setForeground(new java.awt.Color(51, 51, 255));
        chithi3.setLineWrap(true);
        chithi3.setRows(5);
        chithi3.setWrapStyleWord(true);
        jScrollPane6.setViewportView(chithi3);

        input3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        input3.setForeground(new java.awt.Color(51, 0, 255));
        input3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input3ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 255));
        jButton7.setText("ENTER");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("Mô tả đầu vào");

        jButton1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(input3, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jButton7))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(cb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jButton1)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 44, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel3)))
                                .addGap(586, 586, 586))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(7, 7, 7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(input3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void hoTen() {
        result3.append("\n-------------------------------------------------------");
        result3.append("\n20162679 - Vu Duy Manh - 676424");
    }
    private void cb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb3ActionPerformed

    private void input3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (index == 1) {
            result3.setText("");
            String str = input3.getText().toString();
            String str1, str2 = new String();
            str = str.trim();				//Loại bỏ đi các kí tự "cách" đầu cuối
            for (int i = 0; i < str.length(); i++) {
                str1 = str.substring(i, i + 1);		//Lấy ra kí tự trong str
                if (str1.equals(" ")) {
                    str1 = str.substring(i + 1, i + 2);
                    if (str1.equals(" ")) {
                        continue;
                    } else {
                        str2 = str2 + str.substring(i, i + 1);
                    }
                } else {
                    str2 = str2 + str1;
                }
            }
            result3.append("\nHọ tên chính xác là:  ");
            result3.append(str2);
            hoTen();
        } else if (index == 2) {
            result3.setText("");
            String str = input3.getText().toString();
            int count = 0;
            String str1 = new String();
            for (int i = 0; i < str.length() - 2; i++) {
                str1 = str.substring(i, i + 3);
                if (str1.equals("abc")) {
                    count++;
                }
            }
            result3.append("Số lần xuất hiện xâu con \"abc\" là: " + count);
            hoTen();
        } else if (index == 3) {
            result3.setText("");
            String str = input3.getText().toString();
            String str1 = new String();
            str = str.trim();
            int i, count = 0;
            //lưu lại chỉ số i
            for (i = str.length() - 1; i >= 0; i--) {
                str1 = str.substring(i, i + 1);
                if (str1.equals(" ")) {
                    break;
                }
            }
            result3.append("Tên của người đó là: " + str.substring(i + 1));
            hoTen();
        } else if (index == 4) {
            result3.setText("");
            String str = input3.getText().toString();

            String str1 = new String();

            str = str.trim();
            int i;
            //lưu lại chỉ số i
            for (i = 0; i <= str.length(); i++) {
                str1 = str.substring(i, i + 1);
                if (str1.equals(" ")) {
                    break;
                }
            }
            result3.append("Họ của người đó là: " + str.substring(0, i + 1));
            hoTen();
        } else if (index == 5) {
            result3.setText("");
            String str = input3.getText().toString();
            String S1 = new String();
            String S2 = new String();

            for (int i = 0; i < str.length(); i++) {
                S1 = str.substring(i, i + 1);
                if (S1.equals("0")) {
                    S1 = "1";
                } else {
                    S1 = "0";
                }
                S2 = S2 + S1;
            }
            result3.append("Chuỗi sau khi biến đổi là: " + S2);
            hoTen();
        } else if (index == 6) {
            result3.setText("");
            String str = input3.getText().toString();
            String S1 = new String();
            String S2 = new String();

            for (int i = str.length() - 1; i >= 0; i--) {
                S1 = str.substring(i, i + 1);
                S2 = S2 + S1;
            }
            result3.append("Xâu ngược lại của xâu S là: " + S2);
            hoTen();
        } else if (index == 7) {
            result3.setText("");
            String str = input3.getText().toString();
            String S1 = new String();
            String S2 = new String();
            for (int i = 0; i < str.length(); i++) {
                S1 = str.substring(i, i + 1);
                if (S1.equals("0")
                        || S1.equals("1")
                        || S1.equals("2")
                        || S1.equals("3")
                        || S1.equals("4")
                        || S1.equals("5")
                        || S1.equals("6")
                        || S1.equals("7")
                        || S1.equals("8")
                        || S1.equals("9")) {
                    S1 = "$";
                }
                S2 = S2 + S1;
            }
            result3.append("Chuỗi mới là: " + S2);
            hoTen();
        } else if (index == 8) {
            result3.setText("");
            String values = input3.getText().replaceAll("\\s", "");
            String[] strValues = values.split(",");
            String[] a = new String[strValues.length];
            for (int i = 0; i < strValues.length; i++) {
                try {
                    a[i] = strValues[i].toString();
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(null, "Bạn nhập không chính xác");
                }
            }
            String s3 = new String();

            int count = 0;

            int n1 = a[0].length();
            int n2 = a[1].length();

            for (int i = 0; i <= n2 - n1; i++) {
                s3 = a[1].substring(i, i + n1);
                if (s3.equals(a[0])) {
                    count++;
                }
            }
            result3.append("\n==>Xâu S2 xuất hiện trong xâu S2 : " + count + " lần");
        } else if (index == 9) {
            result3.setText("");
            String str = input3.getText().toString();
            String values = input3.getText().replaceAll("\\s", "");
            String[] strValues = values.split(",");
            String s = new String();
            int i, j;
            s = strValues[0].toString();
            i = Integer.parseInt(strValues[1]);
            j = Integer.parseInt(strValues[2]);

            String s1 = new String();
            String s2 = new String();

            int n = s.length();
            for (int k = 0; k < n; k++) {
                s1 = s.substring(k, k + 1);
                if ((k != i) && (k != j)) {
                    s2 = s2 + s1;
                }
                if (k == i) {
                    s2 = s2 + s.substring(j, j + 1);
                }
                if (k == j) {
                    s2 = s2 + s.substring(i, i + 1);
                }
            }
            result3.append(s2);
        } else if (index == 10) {
            result3.setText("");
            String values = input3.getText();
            String[] strValues = values.split(",");
            String[] S = new String[strValues.length];
            for (int i = 0; i < strValues.length; i++) {
                try {
                    S[i] = strValues[i].toString();
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(null, "Bạn nhập không chính xác");
                }
            }
            int n = S.length;

            int max = 0;
            for (int i = 0; i < n; i++) {
                if (S[i].length() > max) {
                    max = S[i].length();
                }
            }
            result3.append("Chuỗi có độ dài lớn nhất là: ");
            int count = 0;
            for (int i = 0; i < n; i++) {
                if (S[i].length() == max) {
                    count++;
                    if (count >= 2) {
                        result3.append("," + S[i]);
                        continue;
                    }
                    result3.append(S[i]);

                }
            }
        } else if (index == 11) {
            result3.setText("");
            String values = input3.getText();
            String[] strValues = values.split(",");
            String[] S = new String[strValues.length];
            for (int i = 0; i < strValues.length; i++) {
                try {
                    S[i] = strValues[i].toString();
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(null, "Bạn nhập không chính xác");
                }
            }
            int n = S.length;
            int count = 0;
            for (int i = 0; i < n; i++) {
                S[i] = S[i].trim();
                int n1 = S[i].length();
                String S1 = S[i].substring(n1 - 2);
                if (S1.equals("An")) {
                    count++;
                }
            }
            result3.append("Số lượng học sinh tên An là: " + count);
        } else if (index == 12) {
            result3.setText("");
            String values = input3.getText();
            String[] strValues = values.split(",");
            String[] S = new String[strValues.length];
            for (int i = 0; i < strValues.length; i++) {
                try {
                    S[i] = strValues[i].toString();
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(null, "Bạn nhập không chính xác");
                }
            }
            int n = S.length;
            int count = 0;
            for (int k = 0; k < n; k++) {
                S[k] = S[k].trim();
                String S1 = new String();
                int N = S[k].length();
                int i, j;
                //lay chi so i
                for (i = 0; i < N; i++) {
                    S1 = S[k].substring(i, i + 1);
                    if (S1.equals(" ")) {
                        break;
                    }
                }
                //lay chi so j
                for (j = N - 1; j >= 0; j--) {
                    S1 = S[k].substring(j, j + 1);
                    if (S1.equals(" ")) {
                        break;
                    }
                }
                S1 = S[k].substring(i + 1, j);
                if (S1.equals("Thị")) {
                    count++;
                }
            }
            result3.append("Có " + count + " bạn trong lớp có tên đệm là \"Thị\"");
        } else if (index == 13) {
            result3.setText("");
            String values = input3.getText();
            String[] strValues = values.split(",");
            String[] S = new String[strValues.length];
            for (int i = 0; i < strValues.length; i++) {
                try {
                    S[i] = strValues[i].toString();
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(null, "Bạn nhập không chính xác");
                }
            }
            int n = S.length;
            int i;
            int count = 0;
            String S1 = new String();
            for (int k = 0; k < n; k++) {
                S[k] = S[k].trim();
                int N = S[k].length();

                for (i = N - 1; i >= 0; i--) {
                    S1 = S[k].substring(i, i + 1);
                    if (S1.equals(" ")) {
                        break;
                    }
                }
                S1 = S[k].substring(i + 1, i + 2);
                if (S1.equals("H")) {
                    count++;
                }
            }
            result3.append("Có " + count + " bạn trong lớp có tên bắt đầu bằng chữ H");
        } else if (index == 14) {
            result3.setText("");
            String str = input3.getText().toString();
            String values = input3.getText().replaceAll("\\s", "");
            String[] strValues = values.split(",");
            String S = new String();
            int N;
            S = strValues[0].toString();
            N = Integer.parseInt(strValues[1]);
            int k, count = 0;
            int L = S.length();
            String S1 = new String();
            while (count < N) {
                for (k = 1; k < L; k++) {
                    S1 = S1 + S.charAt(k); //charAt(k) là lấy ra phần tử ở vị trí k
                }
                S1 = S1 + S.charAt(0);//đưa phần tử ở vị trí 0 về cuỗi dãy
                S = S1;		//gán lại S1 vào S
                S1 = "";	//Đưa S1 về rỗng để xử lí tiếp vòng lặp 
                count++;
            }
            result3.append("==> Xâu Sn là: " + S);
        } else if (index == 15) {
            result3.setText("");
            String values = input3.getText();
            String[] strValues = values.split(",");
            String[] S = new String[strValues.length];
            for (int i = 0; i < strValues.length; i++) {
                try {
                    S[i] = strValues[i].toString();
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(null, "Bạn nhập không chính xác");
                }
            }
            int n = S.length;
            String S3 = new String();
            int N = S[1].length();
            int k;
            if (N % 2 == 0) {
                k = N / 2;
            } else {
                k = (N + 1) / 2;
            }
            S3 = S[1].substring(0, k);
            S3 = S3 + S[0];
            S3 = S3 + S[1].substring(k);
            result3.append(S3);
        } else {
            result3.setText("");
            String values = input3.getText();
            String[] strValues = values.split(",");
            String[] S = new String[strValues.length];
            for (int i = 0; i < strValues.length; i++) {
                try {
                    S[i] = strValues[i].toString();
                } catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(null, "Bạn nhập không chính xác");
                }
            }
            int n = S.length;
            int x = 0, j = 0, dem = 0, k;
            int N2 = S[1].length();
            int N1 = S[0].length();
            while (j < N1) {
                k = x;
                while (k < N2) {
                    if (S[1].charAt(k) == S[0].charAt(j)) {
                        dem++;
                        x = k;
                        break;
                    } else {
                        k++;
                    }
                }
                j++;
            }
            if (dem == N1) {
                result3.append("\n==>Xâu S1 là xâu con của xâu S2");
            } else {
                result3.append("\n==>Xâu S1 không là xâu con của xâu S2");
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    private int index;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        result3.setText("");
        input3.setText("");
        if (cb3.getSelectedItem().toString().equals("Bai 1")) {
            index = 1;
            debai3.setText("Bài 01: Cho trước 1 xâu kí tự là họ tên người đầy đủ nhưng khi nhập có thể thừa một số dấu cách. Hãy xóa đi các dấu cách thừa và in ra họ tên chính xác.");
            chithi3.setText("Nhập xâu vào ô bên dưới");
        } else if (cb3.getSelectedItem().toString().equals("Bai 2")) {
            index = 2;
            debai3.setText("Bài 02: Cho trước 1 xâu kí tự, hãy đếm xem có bao nhiêu lần xuất hiện xâu con \"abc\"");
            chithi3.setText("Nhập xâu vào ô bên dưới");
        } else if (cb3.getSelectedItem().toString().equals("Bai 3")) {
            index = 3;
            debai3.setText("Bài 03: Cho một xâu kí tự là họ tên đầy đủ của một người, hãy tách ra phần tên của người này");
            chithi3.setText("Nhập xâu vào ô bên dưới");
        } else if (cb3.getSelectedItem().toString().equals("Bai 4")) {
            index = 4;
            debai3.setText("Bài 04: Cho một xâu kí tự là họ tên đầy đủ của một người, hãy tách ra phần họ của người này");
            chithi3.setText("Nhập xâu vào ô bên dưới");
        } else if (cb3.getSelectedItem().toString().equals("Bai 5")) {
            index = 5;
            debai3.setText("Bài 05: Cho một xâu ký tự bao gồm toàn các ký tự 0,1. Hãy biến đổi xâu này theo cách 01, 10 và in ra kết quả");
            chithi3.setText("Nhập xâu vào ô bên dưới");
        } else if (cb3.getSelectedItem().toString().equals("Bai 6")) {
            index = 6;
            debai3.setText("Bài 06: Cho trước xâu ký tự S, in ra xâu S1 ngược lại xâu S.");
            chithi3.setText("Nhập xâu vào ô bên dưới");
        } else if (cb3.getSelectedItem().toString().equals("Bai 7")) {
            index = 7;
            debai3.setText("Bài 07: Cho trước xâu ký tự S. Hãy biến đổi S theo quy tắc sau: Chữ số thì biến thành “$”, ký tự thì giữ nguyên.");
            chithi3.setText("Nhập xâu vào ô bên dưới");
        } else if (cb3.getSelectedItem().toString().equals("Bai 8")) {
            index = 8;
            debai3.setText("Bài 08: Cho trước 2 xâu ký tự S1, S2. Hãy đếm xem xâu S1 xuất hiện trong S2 tại bao nhiêu vị trí .");
            chithi3.setText("Nhập xâu S1 và xâu S2 vào ô bên dưới (cách nhau bởi dấu \",\")");
        } else if (cb3.getSelectedItem().toString().equals("Bai 9")) {
            index = 9;
            debai3.setText("Bài 09: Cho xâu S và 2 chỉ số i, j. Hãy đổi chỗ 2 vị trí i, j trong S.");
            chithi3.setText("Nhập xâu S và 2 chỉ số i,j vào ô bên dưới (cách nhau bởi dấu \",\")");
        } else if (cb3.getSelectedItem().toString().equals("Bai 10")) {
            index = 10;
            debai3.setText("Bài 10: Cho mảng xâu ký tự S1, S2, ..Sn. Hãy tìm và in ra phần tử xâu có độ dài lớn nhất.");
            chithi3.setText("Nhập các xâu vào ô bên dưới (cách nhau bởi dấu \",\")");
        } else if (cb3.getSelectedItem().toString().equals("Bai 11")) {
            index = 11;
            debai3.setText("Bài 11: Cho danh sách họ tên đầy đủ học sinh. Hãy đếm xem có bao nhiêu bạn tên “An”.");
            chithi3.setText("Nhập danh sách học sinh vào ô bên dưới, giữa các học sinh cách nhau bởi dấu \",\"");
        } else if (cb3.getSelectedItem().toString().equals("Bai 12")) {
            index = 12;
            debai3.setText("Bài 12: Cho danh sách họ tên đầy đủ học sinh. Hãy đếm xem có bao nhiêu bạn có phần đệm là  “Thị”.");
            chithi3.setText("Nhập danh sách học sinh vào ô bên dưới, giữa các học sinh cách nhau bởi dấu \",\"");
        } else if (cb3.getSelectedItem().toString().equals("Bai 13")) {
            index = 13;
            debai3.setText("Bài 13: Cho danh sách họ tên đầy đủ học sinh. Hãy đếm xem có bao nhiêu bạn  có tên bắt đầu bằng chữ “H”.");
            chithi3.setText("Nhập danh sách học sinh vào ô bên dưới, giữa các học sinh cách nhau bởi dấu \",\"");
        } else if (cb3.getSelectedItem().toString().equals("Bai 14")) {
            index = 14;
            debai3.setText("Bài 14: Dãy xâu ký tự S1, S2,… được cho theo quy tắc sau: S1= “1111100000”, Sk thu được từ Sk-1 bằng cách thay đổi cho lần lượt các vị trí  1-2;  2-3;  3-4; 4-5; 5-6;  6-7; 7-8;  8-9; 9-10. Cho trước số tự nhiên N, Hãy in ra xâu Sn.");
            chithi3.setText("Nhập xâu ban đầu S1 và N vào ô bên dưới,(cách nhau bởi dấu \",\")");
        } else if (cb3.getSelectedItem().toString().equals("Bai 15")) {
            index = 15;
            debai3.setText("Bài 15: Cho trước 2 xâu ký tự S1, S2. Hãy chèn xâu S1 vào giữa xâu S2 và in kết quả.");
            chithi3.setText("Nhập xâu ban đầu S1 và S2 vào ô bên dưới,(cách nhau bởi dấu \",\")");
        } else if (cb3.getSelectedItem().toString().equals("Bai 16")) {
            index = 16;
            debai3.setText("Bài 16: Cho trước 2 xâu S1, S2. Hãy xét xem xâu S1 có phải là xâu con của S2 nếu xóa bỏ vài kí tự của xâu S2 ta được xâu S1.");
            chithi3.setText("Nhập xâu ban đầu S1 và S2 vào ô bên dưới,(cách nhau bởi dấu \",\")");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tuan2.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tuan2.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tuan2.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tuan2.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                tuan3 t3 = new tuan3();
                t3.setVisible(true);
                t3.setTitle("Vũ Duy Mạnh - 20162679");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb3;
    private javax.swing.JTextArea chithi3;
    private javax.swing.JTextArea debai3;
    public static javax.swing.JTextField input3;
    private javax.swing.JButton jButton1;
    public javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea result3;
    // End of variables declaration//GEN-END:variables
}
